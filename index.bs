<link href="./override.css" rel="stylesheet" />
<script defer src="./custom-script.js"></script>
<script src="./backup-script.js"></script>

<pre class='metadata'>
Title: 设备方向事件(DeviceOrientation Event)规范
Shortname: orientation-event
Level: none
Status: UD
Group: dap
TR: https://www.w3.org/TR/orientation-event/
ED: https://mangwu.github.io/deviceorientation-zh/
Text Macro: DATE 2023年10月12日
Text Macro: LONGSTATUS 翻译草案
Boilerplate: omit issues-index, omit conformance, repository-issue-tracking no, copyright off
Repository: mangwu/deviceorientation-zh
Include MDN Panels: if possible
No Editor: true
!编辑者:
	Reilly Grant <a href="https://www.google.com">(Google LLC)</a>
	Raphael Kubo da Costa <a href="https://intel.com">(Microsoft)</a>
!前作者:
    Rich Tibbett (Opera Software ASA)
    Tim Volodine (Google Inc)
    Steve Block (Google Inc until July 2012)
    Andrei Popescu (Google Inc until July 2012)
!翻译反馈: 邮件 <a class="p-name fn u-email email" href="mailto:1185956753@qq.com">@mangwu</a>
Abstract: 本规范定义了几个新的 DOM 事件，这些事件提供了关于主机设备的物理方向和运动的信息。
</pre>
<pre class="anchors">
urlPrefix: https://compat.spec.whatwg.org/; spec: COMPATIBILITY
    type: interface
        text: orientationchange; url: event-orientationchange
urlPrefix: https://www.w3.org/TR/page-visibility-2/; spec: PAGE-VISIBILITY
    type: dfn
        text: visible; url: dom-visibilitystate-visible
</pre>

<h2 class="no-num no-toc no-ref heading settled" id="sotd-cn">
<span class="content">文档状态</span>
</h2>
<div data-fill-with="status-cn">
    <p><em>本节介绍了本文件发布时的状态。当前 
    <abbr title="World Wide Web Consortium">W3C</abbr> 
    出版物列表和本技术报告的最新修订版可在 <a href="https://www.w3.org/TR/">
    <abbr title="World Wide Web Consortium">W3C</abbr> 技术报告索引 </a>
    中找到，网址为 https://www.w3.org/TR/ 。</em>
    </p>

    <p> 本文件由
    <a href="https://www.w3.org/groups/wg/das">设备和传感器工作小组</a>
    依据 <a href="https://www.w3.org/2021/Process-20211102/#w3c-recommendation-track">W3C 
    推荐流程</a> 作为 <strong>工作草案</strong> (Working Draft)发布。
    <span class="del-content">本文档旨在成为W3C推荐标准</span> 。
    </p>

    <p>
    如果您想要对本规范提出反馈和意见，请使用向 
    <a href="mailto:public-device-apis@w3.org?Subject=%5Borientation-event%5D%20PUT%20SUBJECT%20HERE"">
    public-device-apis@w3.org</a> 发送邮件 (
    <a href="mailto:public-device-apis-request@w3.org?subject=subscribe">
    subscribe</a> ，
    <a href="https://lists.w3.org/Archives/Public/public-device-apis/">存档</a>
    )。发送电子邮件时，请将文本 "orientation-event" 放在主题中，最好像这样: 
    "[orientation-event] <i data-lt>...summary of comment...</i>" 。
    欢迎所有讨论。
    </p>

    <p>
    作为编辑草案出版并不意味着
    <abbr title="World Wide Web Consortium">W3C</abbr>
    及其成员的认可。 
    这是一份草案文档，可以随时被其他文档更新、替换或作废。
    本文档不适合被其它正在编写的规范作为引用。
    </p>

    <p> 本文档由一个根据
    <a href="https://www.w3.org/Consortium/Patent-Policy-20200915/">
    <abbr title="World Wide Web Consortium">W3C</abbr> 专利政策</a>
    运作的小组编写。
    <abbr title="World Wide Web Consortium">W3C</abbr>
    保留了一份与该小组可交付成果相关的
    <a href="https://www.w3.org/2004/01/pp-impl/114929/status" rel="disclosure">
    所有可披露专利的公开列表
    </a> ; 该页面还包括公开一份专利的说明。
    对认为包含
    <a 
    href=
    "https://www.w3.org/Consortium/Patent-Policy-20200915/#def-essential">
    基本权利要求
    </a>
    （Essential Claim(s)）的专利有实际了解的个人必须根据
    <a
    href=
    "https://www.w3.org/Consortium/Patent-Policy-20200915/#sec-Disclosure">
    <abbr title="World Wide Web Consortium">W3C</abbr>专利政策第6节
    </a> 
    公开信息。
    </p>

    <p>本文件受
    <a href="https://www.w3.org/2021/Process-20211102/" id="w3c_process_revision-cn">
    2021 11月2日 W3C处理文档</a> 规范管理。
    </p>

    <div class="note custom-note">
    本副本作为 <a href="https://www.w3.org/TR/orientation-event/">
    DeviceOrientation Event Specification</a> 的非官方翻译草案，仅推荐学习使用。
    </div>
</div>

一致性要求 {#conformance-requirements}
======================================

本规范中的所有图表、示例和注释以及明确标记为非规范的所有章节均为非规范性的。
本规范中的其他内容均为规范性内容。

本文件规范性部分中的关键词 "MUST" ， "MUST NOT" ， "REQUIRED" ， "SHOULD" ， 
"SHOULD NOT" ， "RECOMMENDED" ， "MAY" ，和 "OPTIONAL"
应按照RFC2119中的描述进行解释。为了便于阅读，在本规范中，这些单词 
<strong>不会</strong> 全部以大写字母出现。[[!RFC2119]]

作为及其重要的算法的一部分，命令式要求的措辞 (如 "去掉任何前导空格字符" 或 
"返回false并中止这些步骤" ) 应根据介绍算法时使用的关键字( "必须[must]" ，
"应该[should]" ， "可以[may]" 等)的含义进行解释。

用算法或特定步骤表述的一致性要求可以以任何方式实现，只要最终的结果是等效的。
(需要注意，本规范中定义的算法旨在易于遵循，而非性能。)

用户代理可以对其他非强制的(unconstrained)输入施加实现特定的
(implementation-specific)限制，例如，防止服务攻击的拒接器(denial)，
防止内存耗尽，或绕过平台特定的(platform-specific)限制。

使用 ECMAScript 来实现本规范中定义的API的实现时，必须以与Web IDL规范中所定义的
ECMAScript Bindings 的实现方式一致，因为本规范使用该规范的术语。[[!WEBIDL]]

本规范引入的事件实现了 DOM 规范 [[!DOM]] 中定义的 Event 接口。因此，
实现必须支持本规范。


简介 {#introduction}
============================

<em>本节不是规范的。</em>

本规范提供了两个新的 DOM 事件，用于获得关于主机设备的物理方向(physical 
orientation)和移动(movement)的信息。事件提供的信息不是原始传感器数据，
而是与底层信息源无关的高级数据。常见的信息来源包括陀螺仪、指南针和加速计。

规范提供的第一个 DOM 事件 {{deviceorientation}} 提供设备的物理方向，
表示为一个局部坐标系的一系列旋量(rotations)。

本规范提供的第二个 DOM 事件 {{devicemotion}} 提供设备的加速度(acceleration)，
该加速度在设备定义的坐标系中的以笛卡尔坐标(即直角坐标)表示。
它还提供在设备定义的局部坐标系中的设备旋转速率。在实际可行的情况下，
事件应提供设备质心的加速度。

以下代码摘录举例说明了事件的基本用法。

<div class="example">
注册以接收 {{deviceorientation}} 事件:
<pre class="lang-js">
window.addEventListener("deviceorientation", function(event) {
    // 处理 event.alpha, event.beta 和 event.gamma
}, true);
</pre>
</div>

<div class="example">
一个设备平放在水平表面上，屏幕顶部指向西方，其方向如下: 
<pre class="lang-js">
{
  alpha: 90,
  beta: 0,
  gamma: 0
};
</pre>
要获得指南针的方向度数，只需从360度中减去 {{DeviceOrientationEvent/alpha}} 即可。
当设备在水平面上转动时，指南针的方向度数为(360-alpha)。
</div>

<div class="note custom-note">
当设备顶部直接指向地球北极时， {{DeviceOrientationEvent/alpha}} 角为0°，
并且随着设备向左旋转而增加。{{DeviceOrientationEvent/alpha}} 的方位角度表示如下: 
<pre class="lang-js">
           0 北
            |
            |
            |
90 西 -------------- 东 270
            |
            |
            |
          180 南
</pre>
而指南针的方位角度是顺时针的，如下:
<pre class="lang-js">
            0 北
             |
             |
             |
270 西 --------------- 东 90
             |
             |
             |
           180 南
</pre>
</div>

<div class="example">
用户手里拿着设备，屏幕在垂直平面上，屏幕顶部向上。不管 
{{DeviceOrientationEvent/alpha}} 和 {{DeviceOrientationEvent/gamma}} 是什么，
{{DeviceOrientationEvent/beta}} 的值都是90。
</div>

<div class="example">
面对 alpha 度指南针(compass)方位的用户手里拿着设备，设备屏幕在垂直平面上，
屏幕顶部指向他们的右侧。设备的方向为:
<pre class="lang-js">
{
  alpha: 270 - alpha,
  beta: 0,
  gamma: 90
};
</pre>
</div>

<div class="note custom-note">
设备坐标系是固定在设备中心的坐标系。我们使用小写字母("x"、"y"和"z")
来描述设备坐标系的轴。
<figure id="figure-axes">
    <img
        src="images/axes.png"
        width="415"
        height="388"
        alt="设备坐标系"
    />
    <div class="custom-figcaption">
    设备坐标系
    </div>
</figure>
绕z轴旋转，也就是转动设备，会导致 {{DeviceOrientationEvent/alpha}} 
旋转角度发生变化:
<figure id="figure-alpha">
    <img
        src="images/alpha.png"
        width="415"
        height="388"
        alt="当设备顶部直接指向地球北极时，阿尔法角为0°，并且随着设备向左旋转而增加"
    />
    <div class="custom-figcaption">
    当设备顶部直接指向地球北极时，阿尔法角为0°，并且随着设备向左旋转而增加
    </div>
</figure>
绕x轴旋转，也就是说，将设备从用户身边或朝向用户倾斜——会导致 
{{DeviceOrientationEvent/beta}} 旋转角度发生变化:
<figure id="figure-beta2">
    <img
        src="images/beta2.png"
        width="415"
        height="388"
        alt="当设备的顶部和底部距离地球表面相同时，β角为0°; 当设备向前朝用户倾斜时，它向180°增加，当设备向后远离用户倾斜时它向-180°减少。"
    />
    <div class="custom-figcaption">
    当设备的顶部和底部距离地球表面相同时，β角为0°; 当设备向前朝用户倾斜时，
    它向180°增加，当设备向后远离用户倾斜时它向-180°减少。
    </div>
</figure>
绕y轴旋转，即向左或向右倾斜设备，会导致 {{DeviceOrientationEvent/gamma}} 
旋转角度发生变化:
<figure id="figure-gamma">
    <img
        src="images/gamma.png"
        width="415"
        height="388"
        alt="当设备的左侧和右侧距离地球表面相同时，γ角为0°，当设备向右倾斜时，γ角度向90°增加，当设备向左倾斜时，γ角度向-90°增加。"
    />
    <div class="custom-figcaption">
    当设备的左侧和右侧距离地球表面相同时，γ角为0°，当设备向右倾斜时，
    γ角度向90°增加，当设备向左倾斜时，γ角度向-90°增加。
    </div>
</figure>
关于方位和移动数据的更通俗解释，可以查看 
<a href="https://developer.mozilla.org/en-US/docs/Web/API/Device_orientation_events/Orientation_and_motion_data_explained">
MDN-Orientation_and_motion_data_explained</a> 
</div>

<div class="example">
注册以接收 {{devicemotion}} 事件:
<pre class="lang-js">
window.addEventListener("devicemotion", function(event) {
    // 处理 event.acceleration, event.accelerationIncludingGravity,
    // event.rotationRate 和 event.interval
}, true);
</pre>
</div>

<div class="example">
平放在水平表面上、屏幕向上的设备的 {{DeviceMotionEvent/acceleration}} 为零，
加速度值如下 {{DeviceMotionEvent/accelerationIncludingGravity}} (包括重力加速度):
<pre class="lang-js">
{
  x: 0,
  y: 0,
  z: 9.8
};
</pre>
</div>

<div class="example">
屏幕水平且向上的自由落体设备的 
{{DeviceMotionEvent/accelerationIncludingGravity}} 为零，加速度值如下: 
<pre class="lang-js">
{
  x: 0,
  y: 0,
  z: -9.8
};
</pre>
</div>

<div class="example">
一个放置在车辆上的设备，屏幕在垂直平面上，设备顶部朝上，并且屏幕面向车辆后部。
车辆以速度v绕半径为r的右侧弯道行驶。该设备在 {{DeviceMotionEvent/acceleration}} 
和 {{DeviceMotionEvent/accelerationIncludingGravity}} 记录了正x分量。
该设备还记录了 {{DeviceMotionEvent/rotationRate!!attribute}}.
{{DeviceMotionEventRotationRate/gamma}} 的负值:
<pre class="lang-js">
{
  acceleration: {x: v^2/r, y: 0, z: 0},
  accelerationIncludingGravity: {x: v^2/r, y: 9.8, z: 0},
  rotationRate: {alpha: 0, beta: 0, gamma: -v/r*180/pi}
};
</pre>
</div>

适用范围 {#scope}
==============

<em>本节不是规范的。</em>

该规范限于提供 DOM 事件，用于检索描述主机设备的物理方向和运动的信息。
本规范的 API 的预期目的是使简单的用例有效，例如 [[#use-cases|Use-Cases]] 
部分中的用例。本规范的适用范围不包括提供操作这些数据的实用程序，例如转换库。
它也不包括提供对低传感器数据的访问或对这些传感器的直接控制。

说明 {#description}
==========================

<h3 id="deviceorientation">deviceorientation 事件</h3>

实现本规范的用户代理必须提供一个名为 
<dfn event for=Window id="def-deviceorientation"><code>
deviceorientation</code></dfn> 的新DOM事件。

用户代理还必须在 {{window!!attribute}} 对象上提供一个名为 
{{Window/ondeviceorientation}} 的事件处理程序(类型的) IDL 属性 [[!HTML]] 。
它对应的 [=event handler event type=] 的类型必须是 {{deviceorientation}} 。

<pre class="idl">
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientation;
};

[Exposed=Window, SecureContext]
interface DeviceOrientationEvent : Event {
    constructor(DOMString type, optional DeviceOrientationEventInit eventInitDict = {});
    readonly attribute double? alpha;
    readonly attribute double? beta;
    readonly attribute double? gamma;
    readonly attribute boolean absolute;

    static Promise&lt;PermissionState> requestPermission();
};

dictionary DeviceOrientationEventInit : EventInit {
    double? alpha = null;
    double? beta = null;
    double? gamma = null;
    boolean absolute = false;
};
</pre>

{{DeviceOrientationEvent/alpha}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>null</code> 。

{{DeviceOrientationEvent/beta}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>null</code> 。

{{DeviceOrientationEvent/gamma}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>null</code> 。

{{DeviceOrientationEvent/absolute}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>false</code> 。

调用静态方法 {{DeviceOrientationEvent/requestPermission()}} 时，
必须运行以下步骤:
<ol>
 <li><p>赋值 <var>promise</var> 为一个新的期约对象。

 <li>
  <p><a lt="in parallel" dfn>同步(in parallel)</a> 运行下列步骤:

  <ol>
   <li><p>赋值 <var>permission</var> 为一个 
   <a lt="relevant settings object" dfn>相关设置对象(relevant-settings-object)
   </a> 的 <a for="environment settings object" lt="origin" dfn>源(origin)</a> 
   的 <a href="#permission">权限(permission)</a> 。

   <li><p>如果 <var>permission</var> 值为 "<code>default</code>" 并且 
   <a lt="relevant global object" dfn>相关全局对象(relevant global object)</a> 
   没有 <a lt="transient activation" dfn>短暂激活(transient activation)</a> ，
   那么使用一个 {{NotAllowedError!!exception}} {{DOMException}} 错误拒绝(reject) 
   <var>promise</var> 并且中止步骤运行。

   <li><p>如果 <var>permission</var> 值为 "<code>default</code>"，询问用户
   对于 <a lt="relevant settings object" dfn>相关设置对象
   (relevant-settings-object)</a> 的 
   <a for="environment settings object" lt="origin" dfn>源(origin)</a> 
   的设备方向共享是否可以接受。如果可以接受，设置 <var>permission</var> 值为 
   "<code>granted</code>" ，否则设置为 "<code>denied</code>" 。

   <li>
    <p><a lt="Queue a task" dfn>设置一个任务队列(Queue a task)</a> 
    来运行如下步骤:

    <ol>
     <li><p>将 <a lt="relevant settings object" dfn>相关设置对象
     (relevant-settings-object) </a> 的 
     <a for="environment settings object" lt="origin" dfn>源(origin)</a> 的 
     <a href="#permission">权限(permission)</a> 赋予 <var>permission</var> 。

     <li><p>根据 <var>permission</var> 的值兑现(Fulfill) <var>promise</var> 。
    </ol>
  </ol>

 <li><p>返回 <var>promise</var> 。
</ol>

每当方向发生显著变化时，用户代理必须在 {{window!!attribute}} 对象上使用 
{{DeviceOrientationEvent}} <a lt="fire an event" dfn>触发(fire an event)</a> 
名为 {{deviceorientation}} 的事件。在这种情况下，显著变化的定义留给具体的实现，
不过本规范建议将方向变化的最大阈值设置为一度。
如果具体实现有页面没有足够的新数据的检测逻辑，那么它们也可触发事件。

事件的 {{DeviceOrientationEvent/alpha}} 、 {{DeviceOrientationEvent/beta}} 和 
{{DeviceOrientationEvent/gamma}} 
属性必须根据从固定在地球上的坐标系到固定在设备中的坐标系的转换，
来明确指出设备的方向。{{DeviceOrientationEvent/alpha}} 、 
{{DeviceOrientationEvent/beta}} 和 {{DeviceOrientationEvent/gamma}} 
属性必须以度为单位，并且精确度不得超过0.1度。坐标系的方位必须如下所述。

地球坐标系是用户所在位置的 '东、北、上' 坐标系。它有以下3个轴，
其中在用户位置的地平面与1984年世界测地系统(World Geodetic System) 
[[WGS84]] 的球面相切。

* 东轴(X) 在地平面上，垂直于北轴，向东为正。
* 北轴(Y) 在地平面上，向北为正(朝向北极)。
* 上轴(Z) 垂直于地平面，像上为正。

对于手机或平板电脑等移动设备，设备坐标系是在其标准方向(通常是纵向)
相对于屏幕定义的。这意味着诸如键盘之类的抽屉式(slide-out)元件不被部署(deployed)，
并且诸如显示器之类的旋转(swiveling)元件被折叠到它们的默认位置。
如果在旋转设备或部署抽屉式键盘时屏幕的方向发生变化，
则不会影响坐标系相对于设备的方向。希望检测屏幕方向的变化的用户可以通过现有的 
{{orientationchange}} 事件来进行检测。对于笔记本电脑，
设备坐标系是相对于集成键盘定义的。

<div class="note custom-note">
这段话要表达的意思是移动设备在向用户显示内容时的方向的变化和设备自身的方向无关，
可以见 {{ScreenOrientation}} 接口查阅信息。不过需要注意的是，
{{orientationchange}} 事件已被弃用，想要监听显示内容的方向变化，
可以编写如下代码:
<pre class="lang-js">
screen.orientation.addEventListener("change", (event) => {
  const type = event.target.type;
  const angle = event.target.angle;
  console.log(`ScreenOrientation change: ${type}, ${angle} degrees.`);
});
</pre>
</div>


* x轴在屏幕或键盘的平面内，并且朝向屏幕或键盘的右手侧为正。
* y轴在屏幕或键盘的平面内，并且朝向屏幕或键盘的顶部为正。
* z轴垂直于屏幕或键盘，朝屏幕或键盘外侧为正。

从地球坐标系到设备坐标系的转换(transformation)必须使用以下旋转系统。

旋转必须使用右手定则，这样，当沿着轴的正方向观察时，绕轴的正旋转是顺时针方向。

<div class="note custom-note" data-content="注释:">
本规范使用的坐标系不同于 [[css-transforms-2#transform-rendering]] ，
其y轴朝向底部为正，旋转遵循左手定则。此外，在 [[GEOMETRY-1]] 中指定的 
{{DOMMatrix/rotateSelf()}} 和 {{DOMMatrixReadOnly/rotate()}} 以
Z - Y' - X'' 的顺序应用旋转，这与此处指定的顺序不同。
</div>

<div class="note custom-note">
这里说的右手定则和左手定则都是用于判断绕一个轴旋转时，对应的角度值正负的，
如右手大拇指指向Z轴，四指弯曲的旋转方向为α正方向(沿Z轴正方向观察为顺时针，
沿Z轴负方向观察为逆时针)
</div>


从两个坐标系对齐开始，按以下顺序应用旋转:

<ol id="rotations">
<li>
    <p>将设备坐标系绕其Z轴旋转 {{DeviceOrientationEvent/alpha}} 度，
    {{DeviceOrientationEvent/alpha}} 值范围为 [0, 360) 。</p>
    <div>
    <img src="start.png" alt="start orientation">
    <div>设备处于初始位置，地球坐标系(XYZ)和设备坐标系(XYZ)对齐。</div>
    </div>
    <div>
    <img src="c-rotation.png" alt="rotation about z axis">
    <div>
    设备绕Z轴旋转角度α，x轴和y轴的先前位置显示为 x<sub>0</sub> 和 y<sub>0</sub> 
    。</div>
    </div>
</li>
<li>
    <p>
    将设备坐标系绕其X轴旋转 {{DeviceOrientationEvent/beta}} 度， 
    {{DeviceOrientationEvent/beta}} 值范围为 [-180, 180) 。 </p>
    <div>
    <img src="a-rotation.png" alt="rotation about x axis">
    <div>设备围绕新的X轴旋转角度β，y轴和z轴的先前位置显示为 y<sub>0</sub> 和 
    z<sub>0</sub> 。</div>
    </div>
</li>
<li>
    <p>
    将设备坐标系绕其Y轴旋转 {{DeviceOrientationEvent/gamma}} 度，
    {{DeviceOrientationEvent/gamma}} 值范围为 [-90，90) 。</p>
    <div>
    <img src="b-rotation.png" alt="rotation about y axis">
    <div>设备围绕新的Y轴旋转角度γ，x轴和z轴的先前位置显示为 x<sub>0</sub> 和 
    z<sub>0</sub> 。</div>
    </div>
</li>
</ol>

因此，{{DeviceOrientationEvent/alpha}} 、 {{DeviceOrientationEvent/beta}} 
和 {{DeviceOrientationEvent/gamma}} 角形成了一组 Z - X' - Y'' 
类型的动态(intrinsic)泰特布莱恩(Tait-Bryan)角。[[EULERANGLES]] 请注意，
角度的(正负)选择遵循数学惯例(右手定则)，这意味着阿尔法角与指南针的方向相反。
这也意味着这些角度与车辆动力学中使用的侧倾-俯仰-偏航(roll-pitch-yaw)约定不匹配。
<div class="note custom-note">
对于一个三维空间的参考系，任何其它坐标系的取向，都可以用三个欧拉角来表示，
参考系是静止不动的，而坐标系固定于刚体，随着刚体的旋转而旋转。<br/> 在本规范中，
参考系就是地球坐标系，而刚体就是移动设备，坐标系就是设备坐标系。
欧拉角可以用来表示三维坐标系中的方向和方向变换，它细分为经典欧拉角(Proper Euler 
angles)和泰特布莱恩角(Tait-Bryan angles)，
这两种方法都利用了笛卡尔坐标系的三轴作为旋转轴，主要区别在于选取旋转轴的顺序。
<br/> 欧拉角的轴选取顺序有6种: XYX ， YXY ， XZX ， ZXZ ， YZY ， ZYZ，
以ZYZ为例，静态地(extrinsic)旋转方式如图:
<figure id="figure-ZXZ">
    <img
        src="images/ZXZ.png"
        width="454"
        height="480"
        alt="经典欧拉角绕轴静态旋转的一种方式，先绕z轴，再绕x轴，最后再绕z轴旋转"
    />
    <div class="custom-figcaption">
    经典欧拉角绕轴静态旋转的一种方式，先绕z轴，再绕x轴，最后再绕z轴旋转
    </div>
</figure>
动态地(intrinsic)旋转方式如图:
<figure id="figure-ZXZ'">
    <img
        src="images/ZXZ'.png"
        width="300"
        height="338"
        alt="经典欧拉角绕轴动态旋转地一种方式，先绕Z轴，再绕旋转后地Y轴，再绕旋转后地Z轴旋转"
    />
    <div class="custom-figcaption">
    经典欧拉角绕轴动态旋转的一种方式，先绕Z轴，再绕旋转后的Y轴，
    再绕旋转后的Z轴旋转，可以用Z - X' - Z''表示
    </div>
</figure>
泰特布莱恩(Tait-Bryan)角的轴选取方式也有6种: XYZ ， XZY ， YXZ ， YZX ， ZXY ，
ZYX，本规范已经以旋转移动设备为例子，指出了一种Z - X' - Y''的动态旋转方式。<br/>
所谓的动态和静态地旋转方式，也可以称为内旋(intrinsic rotation)和外旋(extrinsic 
rotation)，前者在旋转过程中，相对于变换后的(当前)坐标系做变换，以 x - y' - z''
的方式表示， <code>'</code> 表达该次旋转以上一次旋转后的坐标轴为参考;
后者在旋转过程中，相对于初始(固定的)坐标系做变换，以x-y-z的方式表示。
</div>


{{deviceorientation}} 事件试图仅基于加速度计和陀螺仪来提供(相对于某个任意方向的)
三个角度的相对(relative)值。如果无法获取相对值或者绝对值数据更精确，
则具体实现仍然可以决定提供绝对方向(absolute orientation)。无论在哪种情况下，
都必须相应地设置 {{DeviceOrientationEvent/absolute}} 
属性以反映实现获取的方向数据的类型。

无法提供全部三个角度的实现必须将未知角度的值设置为 <code>null</code> 。
如果提供了其中一个角度，则必须恰当地设置 {{DeviceOrientationEvent/absolute}} 
属性。如果一个实现永远不能提供方向信息，那么在触发 {{deviceorientation}} 
事件时， {{DeviceOrientationEvent/alpha}} 、 {{DeviceOrientationEvent/beta}} 和 
{{DeviceOrientationEvent/gamma}} 属性应该设置为 <code>null</code> 。

<h3 id="deviceorientationabsolute">deviceorientationabsolute 事件</h3>

<div class="issue">
{{deviceorientationabsolute}} 事件及其 {{Window/ondeviceorientationabsolute}} 
事件处理程序(类型的) IDL 属性的
<a href="https://wpt.fyi/results/orientation-event/ondeviceorientationabsolute.https.html">
实现经验有限</a>。
</div>

每当方向发生显著变化时，
实现本规范的用户代理必须在 {{window!!attribute}} 对象上使用 
{{DeviceOrientationEvent}} <a lt="fire an event" dfn>触发(fire an event)</a> 名
为 <dfn event for="Window" id="def-deviceorientationabsolute"> 
<code>deviceorientationabsolute</code></dfn> 的事件。

用户代理还必须在 {{window!!attribute}} 对象上提供名为 
{{Window/ondeviceorientationabsolute}} 的事件处理程序(类型的) IDL 属性 [[!HTML]]
。它对应的 [=event handler event type=] 的类型必须是 
{{deviceorientationabsolute}} 。

<pre class="idl">
partial interface Window {
    [SecureContext] attribute EventHandler ondeviceorientationabsolute;
};
</pre>

{{deviceorientationabsolute}} 事件与 {{deviceorientation}} 事件完全类似
(analogous)，只是前者可以使用磁力计(magnetometer)等附加传感器来提供绝对方向信息。
{{DeviceOrientationEvent/absolute}} 属性必须设置为 <code>true</code> 。
如果一个实现永远不能提供方向信息，那么在触发 {{deviceorientationabsolute}}
事件时， {{DeviceOrientationEvent/alpha}} 、 {{DeviceOrientationEvent/beta}} 和 
{{DeviceOrientationEvent/gamma}} 属性应该设置为 <code>null</code> 。

<h3 id="devicemotion">devicemotion 事件</h3>

实现本规范的用户代理必须在 {{window!!attribute}} 对象上使用 
{{DeviceMotionEvent}} <a lt="fire an event" dfn>触发(fire an event)</a> 名为 
<dfn event for=Window id="def-devicemotion"><code>devicemotion</code></dfn> 
的事件。

用户代理还必须在 {{window!!attribute}} 对象上提供一个名为 
{{Window/ondevicemotion}} 的事件处理程序(类型的) IDL 属性 [[!HTML]] 。
它对应的 [=event handler event type=] 的类型必须是 {{devicemotion}} 。

<pre class="idl">
partial interface Window {
    [SecureContext] attribute EventHandler ondevicemotion;
};

[Exposed=Window, SecureContext]
interface DeviceMotionEventAcceleration {
    readonly attribute double? x;
    readonly attribute double? y;
    readonly attribute double? z;
};

[Exposed=Window, SecureContext]
interface DeviceMotionEventRotationRate {
    readonly attribute double? alpha;
    readonly attribute double? beta;
    readonly attribute double? gamma;
};

[Exposed=Window, SecureContext]
interface DeviceMotionEvent : Event {
    constructor(DOMString type, optional DeviceMotionEventInit eventInitDict = {});
    readonly attribute DeviceMotionEventAcceleration? acceleration;
    readonly attribute DeviceMotionEventAcceleration? accelerationIncludingGravity;
    readonly attribute DeviceMotionEventRotationRate? rotationRate;
    readonly attribute double interval;

    static Promise&lt;PermissionState> requestPermission();
};

dictionary DeviceMotionEventAccelerationInit {
    double? x = null;
    double? y = null;
    double? z = null;
};

dictionary DeviceMotionEventRotationRateInit {
    double? alpha = null;
    double? beta = null;
    double? gamma = null;
};

dictionary DeviceMotionEventInit : EventInit {
    DeviceMotionEventAccelerationInit acceleration;
    DeviceMotionEventAccelerationInit accelerationIncludingGravity;
    DeviceMotionEventRotationRateInit rotationRate;
    double interval = 0;
};
</pre>

{{DeviceMotionEvent/acceleration}} 属性必须返回其初始化的值。创建对象时，
此属性必须初始化为 <code>null</code> 。

{{DeviceMotionEvent/accelerationIncludingGravity}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>null</code> 。

{{DeviceMotionEvent/rotationRate}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>null</code> 。

{{DeviceMotionEvent/interval}} 属性必须返回其初始化的值。
创建对象时，此属性必须初始化为 <code>0</code> 。

调用静态方法 {{DeviceMotionEvent/requestPermission()}} 时，必须运行以下步骤:

<ol>
 <li><p>赋值 <var>promise</var> 为一个新的期约对象。

 <li>
  <p><a lt="in parallel" dfn>同步(in parallel)</a> 运行下列步骤:

  <ol>
   <li><p>赋值 <var>permission</var> 为一个 
   <a lt="relevant settings object" dfn>相关设置对象(relevant-settings-object)
   </a> 的 <a for="environment settings object" lt="origin" dfn>源(origin)</a> 
   的 <a href="#permission">权限(permission)</a> 。

   <li><p>如果 <var>permission</var> 值为 "<code>default</code>" 并且 
   <a lt="relevant global object" dfn>相关全局对象(relevant global object)</a>  
   没有 <a lt="transient activation" dfn>短暂激活(transient activation)</a> ，
   那么使用一个 {{NotAllowedError!!exception}} {{DOMException}} 错误拒绝(reject) 
   <var>promise</var> 并且中止步骤运行。

   <li><p>如果 <var>permission</var> 值为 "<code>default</code>"，询问用户
   对于 <a lt="relevant settings object" dfn>相关设置对象
   (relevant-settings-object) </a> 的 
   <a for="environment settings object" lt="origin" dfn>源(origin)</a> 
   的设备方向共享是否可以接受。如果可以接受，设置 <var>permission</var> 值为 
   "<code>granted</code>" ，否则设置为 "<code>denied</code>" 。

   <li>
    <p><a lt="Queue a task" dfn>设置一个任务队列(Queue a task)</a> 
    来运行如下步骤:

    <ol>
     <li><p>将 <a lt="relevant settings object" dfn>相关设置对象
     (relevant-settings-object) </a> 的 
     <a for="environment settings object" lt="origin" dfn>源(origin)</a> 的 
     <a href="#permission">权限(permission)</a> 赋予 <var>permission</var> 。

     <li><p>根据 <var>permission</var> 的值兑现(Fulfill) <var>promise</var> 。
    </ol>
  </ol>

 <li><p>返回 <var>promise</var> 。
</ol>

In the {{DeviceMotionEvent}} events fired by the user agent, the following requirements must apply:
在用户代理触发的 {{DeviceMotionEvent}} 事件中，必须满足以下要求:

{{DeviceMotionEvent/acceleration}} 属性必须使用主机设备相对于地球坐标系
(Earth frame)的加速度进行初始化，并以自身坐标系(设备坐标系)表示，
正如 [[#deviceorientation|deviceorientation Event]] 部分中定义的那样。
加速度必须以米/秒平方 (m/s<sup>2</sup>) 为单位，且精确度不得超过 
0.1 m/s<sup>2</sup> 。

对于不能在没有重力(gravity)影响的情况下提供加速度数据的实现(例如，
由于缺乏陀螺仪)，可以提供包括重力影响的加速度。虽然在许多应用场景中用处不大，
但这也是尽最大努力支持进行数据提供的一种方式。在这种情况下，
{{DeviceMotionEvent/accelerationIncludingGravity}} 
属性必须使用主机设备的加速度加上与重力加速度相等或相反的加速度进行初始化。
同样，加速度必须在 [[#deviceorientation|deviceorientation Event]] (设备方向事件)
部分中定义的自身坐标系(设备坐标系)中给出，必须以米/秒平方 (m/s<sup>2</sup>) 
为单位，且精确度不得超过 0.1 m/s<sup>2</sup> 。

<div class="note custom-note" data-content="注释:">
在实践中， {{DeviceMotionEvent/accelerationIncludingGravity}} 表示从 
<a href="https://w3c.github.io/motion-sensors/#accelerometer">
运动传感器解释器 § 加速度计</a> 中获得的原始数据或 [[G-FORCE]] ，而 
{{DeviceMotionEvent/acceleration}} 提供
<a href="https://w3c.github.io/motion-sensors/#linear-acceleration-sensor">
运动传感器解释器 § 线性加速度传感器</a> 的数据，
并且这个数据很可能是将多个传感器的数据进行整合和处理(的结果)。
</div>

属性必须使用主机设备在空间中的旋转速率进行初始化。它必须表示为之前定义的 
{{DeviceOrientationEvent/alpha}} (x轴)、 {{DeviceOrientationEvent/beta}} (y轴)、
{{DeviceOrientationEvent/gamma}} (z轴)的角度的变化率。
每个属性必须以度数/度数(deg/s)为单位，并且精确度不得超过 0.1deg/s 。

{{DeviceMotionEvent/interval}} 属性必须使用从底层硬件获取的间隔数据进行初始化，
并且必须以毫秒(ms)为单位。它必须是一个常量，以简化 Web 应用程序对数据的筛选。

无法提供全部属性值的实现必须将未知属性的值初始化为 <code>null</code> 。
如果一个实现永远无法提供运动信息，那么在触发 {{devicemotion}} 事件时， 
{{DeviceMotionEvent/acceleration}} 、 
{{DeviceMotionEvent/accelerationIncludingGravity}} 和 
{{DeviceMotionEvent/rotationRate}} 属性应该设置为 <code>null</code> 。

<h3 id="id=permission-model">权限模型(Permission model)</h3>

<div class="issue">正在为权限模型的实现收集进一步的经验，
并且根据实现经验获知的规范阐述(clarifications)正在
<a href="https://github.com/w3c/deviceorientation/issues/74">GitHub问题#74</a>
中进行讨论。</div>

<p>仅当用户(或代表用户的用户代理)已授予 <dfn>permission</dfn> (权限)时，
实现可以选择共享设备的方向和运动信息。对于一个给定
<a for=/ lt="origin" dfn>源</a> 共享的设备方向和运动信息的 
<a href="#permission">权限</a> 是如下三个字符串之一:

<dl>
  <dt>"<code>default</code>"
  <dd><p>相当于 "<code>denied</code>" (拒绝)，
  但用户当前为止并没有做出明确的选择。

  <dt>"<code>denied</code>"
  <dd><p>这意味着用户不希望分享设备方向或运动信息。

  <dt>"<code>granted</code>"
  <dd><p>这意味着同意共享设备方向或运动。
</dl>

<p class=note>没有意为 "<code>granted</code>" 的等价的 "<code>default</code>"。
在那种情况下， "<code>granted</code>" 将被简单地返回，因为应用程序没有理由请求 
<a href="#permission">权限</a> 。

安全和隐私注意事项 {#security-and-privacy}
===========================================================

本规范中定义的 API 可用于从硬件传感器(如加速度计、陀螺仪和磁力计)中获取信息。
所提供的数据可能被视为敏感数据，并可能成为恶意网页攻击的对象。
加速度计、陀螺仪和磁力计的校准可以展现出特定传感器硬件 [[SENSORID]] 的持续细节。
主要攻击手段可分为以下几类: 

* 监视用户输入 [[TOUCH]]
* 位置跟踪 [[INDOORPOS]]
* 用户标识 [[FINGERPRINT]]

有鉴于此，实现可以考虑权限或视觉指示器来认证网页对传感器的使用。此外，
为了最大限度地降低隐私风险、指纹识别和其他攻击的可能性，实现必须:

* 仅当 <a lt="active document" dfn>活动文档</a>  <a lt="visible" dfn>可见</a> 
    时才触发事件，
* 仅在 <a lt="top-level browsing context" dfn>顶级浏览上下文</a> 
    和同源嵌套浏览上下文上触发事件，
* 仅在安全浏览上下文 [[!SECURE-CONTEXTS]] 上触发事件，
* 如前几节所述，限制属性值的精度。

此外，实现这些项目特性也可能对移动设备的电池寿命产生有益影响。

用例和要求 {#use-cases-and-requirements}
========================================================

<h3 id="use-cases">用例</h3>
<em>本节不是规范的。</em>

<h4 class="no-toc" id="controlling-a-game">游戏操纵</h4>
<em>本节不是规范的。</em>

一个游戏类型的 Web 应用程序可以监视设备的方向，
并将向某个方向倾斜解释为控制屏幕上的精灵的一种方式。

<h4 class="no-toc" id="gesture-recognition">手势识别</h4>
<em>本节不是规范的。</em>

Web 应用程序可以监视设备的加速度，并应用信号处理来识别特定的手势。例如，
使用摇动手势来清除网页表单。

<h4 class="no-toc" id="mapping">地图</h4>
<em>本节不是规范的。</em>

地图类型的 Web 应用程序使用设备的方向信息将地图与现实正确对齐。

<h3 id="requirements">要求</h3>
<em>本节不是规范的。</em>

* 规范必须提供描述设备在空间中的物理方向的数据。
* 规范必须提供描述设备在空间中运动的数据。
* 本规范必须允许 Web 应用程序记录(register for)设备方向的更改。
* 本规范必须对方向和运动数据的底层来源而言是不可知的。
* 规范必须使用现有的 DOM 事件框架。

<h2 class="no-num" id="examples">A 实例</h2>
<em>本节不是规范的。</em>

<h3 id="worked-example">A.1 计算指南针方向</h3>

<em>本节不是规范的。</em>

以下示例演示旨在帮助使用 DeviceOrientation 事件的用户。

[[#introduction|简介]] 部分提供了一个示例: 当设备屏幕处于水平位置时，可以使用
DeviceOrientation 事件来获取指南针方向。此示例显示了在设备屏幕大致垂直于(站立)
用户的情况下，握住设备时，如何确定用户所面对的指南针方向。一个应用场景是增强现实
(augmented-reality ，AR)系统。

更准确地说，我们希望确定垂直于设备的屏幕并指向屏幕背面向量的水平分量，
这个水平分量可以表示指南针方向。

如果 v 表示这个在旋转设备坐标系 xyz 中的向量，则v如下。

<object class="equation" data="equation1.xhtml" type="application/mathml+xml">
    <p><img src="equation1.png" alt="v = [0; 0; -1]">
</object>

v 由于绕z轴旋转而产生的变换可以由以下旋转矩阵表示。

<object class="equation" data="equation2.xhtml" type="application/mathml+xml">
    <img src="equation2.png" alt="Z = [cos(alpha) -sin(alpha) 0; sin(alpha) cos(alpha) 0; 0 0 1]">
</object>

v 由于绕x轴的旋转而产生的变换可以由以下旋转矩阵表示。

<object class="equation" data="equation3.xhtml" type="application/mathml+xml">
    <img src="equation3.png" alt="X = [1 0 0; 0 cos(beta) -sin(beta); 0 sin(beta) cos(beta)]">
</object>

v 由于绕y轴的旋转而产生的变换可以由以下旋转矩阵表示。

<object class="equation" data="equation4.xhtml" type="application/mathml+xml">
    <img src="equation4.png" alt="Y = [cos(gamma) 0 sin(gamma); 0 1 0; -sin(gamma) 0 cos(gamma)]">
</object>

如果 R 表示设备在地球坐标系 XYZ 中的全旋转矩阵，
因为初始设备坐标系与地球坐标系对齐，所以R可以如下表示。

<object class="equation" data="equation13a.xhtml" type="application/mathml+xml">
    <img src="equation13a.png" alt="R = ZXY = [[cos(alpha) cos(gamma)-sin(alpha) sin(beta) sin(gamma), -cos(beta) sin(alpha), cos(gamma) sin(alpha) sin(beta)+cos(alpha) sin(gamma)], [cos(gamma) sin(alpha)+cos(alpha) sin(beta) sin(gamma), cos(alpha) cos(beta), sin(alpha) sin(gamma)-cos(alpha) cos(gamma) sin(beta)], [-cos(beta) sin(gamma), sin(beta), cos(beta) cos(gamma)]]">
</object>

如果 v' 表示地球坐标系 XYZ 中(经过全旋转后)的矢量v，
因为初始设备坐标系与地球坐标系对齐，所以v'可以如下表示。

<object class="equation" data="equation5a.xhtml" type="application/mathml+xml">
    <img src="equation5a.png" alt="v' = Rv">
</object>
</object>
    <object class="equation" data="equation5e.xhtml" type="application/mathml+xml">
    <img src="equation5e.png" alt="v' = [-cos(alpha)sin(gamma)-sin(alpha)sin(beta)cos(gamma); -sin(alpha)sin(gamma)+cos(alpha)sin(beta)cos(gamma); -cos(beta)cos(gamma)]">
</object>

指南针方向 &theta; 通过如下公式计算

<object class="equation" data="equation6.xhtml" type="application/mathml+xml">
    <img src="equation6.png" alt="theta = atan((v'_x)/(v'_y)) = atan((-cos(alpha)sin(gamma)-sin(alpha)sin(beta)cos(gamma))/(-sin(alpha)sin(gamma)+cos(alpha)sin(beta)cos(gamma)))">
</object>

条件是 &beta; 和 &gamma; 都不为零。

<div class="example">

上面的指南针方向计算可以用 JavaScript 代码如下表示，
以便在提供的定义好的参数(非 <code>null</code> 并且是 
{{DeviceOrientationEvent/absolute | 绝对}} 值)时能正确返回的指南针方向。

<pre class="lang-js">
var degtorad = Math.PI / 180; // 度-弧度 转换系数

function compassHeading( alpha, beta, gamma ) {

  var _x = beta  ? beta  * degtorad : 0; // &beta; 值
  var _y = gamma ? gamma * degtorad : 0; // &gamma; 值
  var _z = alpha ? alpha * degtorad : 0; // &alpha; 值

  var cX = Math.cos( _x );
  var cY = Math.cos( _y );
  var cZ = Math.cos( _z );
  var sX = Math.sin( _x );
  var sY = Math.sin( _y );
  var sZ = Math.sin( _z );

  // 计算 Vx 和 Vy 分量
  var Vx = - cZ * sY - sZ * sX * cY;
  var Vy = - sZ * sY + cZ * sX * cY;

  // 计算指南针方向
  var compassHeading = Math.atan( Vx / Vy );

  // 将指南针方向转换为使用整个单位圆的格式
  if( Vy < 0 ) {
    compassHeading += Math.PI;
  } else if( Vx < 0 ) {
    compassHeading += 2 * Math.PI;
  }

  return compassHeading * ( 180 / Math.PI ); // 指南针方向 (度单位)

}
</pre>
</div>

可以进行一次稳定性(consistency)检查，如果我们设置 &gamma; = 0 ，那么

<object class="equation" data="equation7.xhtml" type="application/mathml+xml">
    <img src="equation7.png" alt="theta = atan(-sin(alpha)sin(beta)/cos(alpha)sin(beta)) = -alpha">
</object>

如同预期一样。

或者，如果我们设置 &beta; = 90 ，那么

<object class="equation" data="equation8a.xhtml" type="application/mathml+xml">
    <img src="equation8a.png" alt="theta = atan((-cos(alpha)sin(gamma)-sin(alpha)cos(gamma))/(-sin(alpha)sin(gamma)+cos(alpha)cos(gamma)))">
</object>
<object class="equation" data="equation8b.xhtml" type="application/mathml+xml">
    <img src="equation8b.png" alt="theta = atan(-sin(alpha+gamma)/cos(alpha+gamma)) = -(alpha+gamma)">
</object>

如同预期一样。

<h3 id="worked-example-2">A.2 备用(Alternate)设备方向模型表示</h3>

<em>本节不是规范的。</em>

使用泰特布莱恩(Tait-Bryan)角描述方位可能有一些缺点，例如引入万向节锁定(gimbal 
lock) [[GIMBALLOCK]]。根据预期的应用程序，将 "设备方向(Device Orientation)"
的值转换为其他旋转表示可能会更有用。

The first alternate orientation representation uses rotation matrices. 
By combining the component rotation matrices provided in the [[#worked-example|worked example]] 
above we can represent the orientation of the device body frame as a combined rotation matrix.
第一个备用方向模型表示使用旋转矩阵。通过组合上述 [[#worked-example|可行示例]] 
中提供的分量旋转矩阵，我们可以将设备主体框架的方向表示为组合旋转矩阵。

If R represents the rotation matrix of the device in the earth frame XYZ, then since the initial body frame is aligned with the earth, R is as follows.

<object class="equation" data="equation13a.xhtml" type="application/mathml+xml">
    <img src="equation13a.png" alt="R = ZXY = [[cos(alpha) cos(gamma)-sin(alpha) sin(beta) sin(gamma), -cos(beta) sin(alpha), cos(gamma) sin(alpha) sin(beta)+cos(alpha) sin(gamma)], [cos(gamma) sin(alpha)+cos(alpha) sin(beta) sin(gamma), cos(alpha) cos(beta), sin(alpha) sin(gamma)-cos(alpha) cos(gamma) sin(beta)], [-cos(beta) sin(gamma), sin(beta), cos(beta) cos(gamma)]]">
</object>

<div class="example">
The above combined rotation matrix can be represented in JavaScript as follows provided passed parameters are defined, not null and represent {{DeviceOrientationEvent/absolute}} values.
<pre class="lang-js">
var degtorad = Math.PI / 180; // Degree-to-Radian conversion

function getRotationMatrix( alpha, beta, gamma ) {

  var _x = beta  ? beta  * degtorad : 0; // beta value
  var _y = gamma ? gamma * degtorad : 0; // gamma value
  var _z = alpha ? alpha * degtorad : 0; // alpha value

  var cX = Math.cos( _x );
  var cY = Math.cos( _y );
  var cZ = Math.cos( _z );
  var sX = Math.sin( _x );
  var sY = Math.sin( _y );
  var sZ = Math.sin( _z );

  //
  // ZXY rotation matrix construction.
  //

  var m11 = cZ * cY - sZ * sX * sY;
  var m12 = - cX * sZ;
  var m13 = cY * sZ * sX + cZ * sY;

  var m21 = cY * sZ + cZ * sX * sY;
  var m22 = cZ * cX;
  var m23 = sZ * sY - cZ * cY * sX;

  var m31 = - cX * sY;
  var m32 = sX;
  var m33 = cX * cY;

  return [
    m11,    m12,    m13,
    m21,    m22,    m23,
    m31,    m32,    m33
  ];

};
</pre>
</div>

Another alternate representation of device orientation data is as Quaternions. [[QUATERNIONS]]

If q represents the unit quaternion of the device in the earth frame XYZ, then since the initial body frame is aligned with the earth, q is as follows.

<object class="equation" data="equation14.xhtml" type="application/mathml+xml">
    <img src="equation14.png" alt="q = [[q_w], [q_x], [q_y], [q_z]] = [[cos(beta)cos(gamma)cos(alpha) - sin(beta)sin(gamma)sin(alpha)], [sin(beta)cos(gamma)cos(alpha) - cos(beta)sin(gamma)sin(alpha)], [cos(beta)sin(gamma)cos(alpha) + sin(beta)cos(gamma)sin(alpha)], [cos(beta)cos(gamma)sin(alpha) + sin(beta)sin(gamma)cos(alpha)]]">
</object>

<div class="example">
The above quaternion can be represented in JavaScript as follows provided the passed parameters are defined, are {{DeviceOrientationEvent/absolute}} values and those parameters are not null.
<pre class="lang-js">
var degtorad = Math.PI / 180; // Degree-to-Radian conversion

function getQuaternion( alpha, beta, gamma ) {

  var _x = beta  ? beta  * degtorad : 0; // beta value
  var _y = gamma ? gamma * degtorad : 0; // gamma value
  var _z = alpha ? alpha * degtorad : 0; // alpha value

  var cX = Math.cos( _x/2 );
  var cY = Math.cos( _y/2 );
  var cZ = Math.cos( _z/2 );
  var sX = Math.sin( _x/2 );
  var sY = Math.sin( _y/2 );
  var sZ = Math.sin( _z/2 );

  //
  // ZXY quaternion construction.
  //

  var w = cX * cY * cZ - sX * sY * sZ;
  var x = sX * cY * cZ - cX * sY * sZ;
  var y = cX * sY * cZ + sX * cY * sZ;
  var z = cX * cY * sZ + sX * sY * cZ;

  return [ w, x, y, z ];

}
</pre>
</div>

We can check that a Unit Quaternion has been constructed correctly using Lagrange's four-square theorem

<object class="equation" data="equation18.xhtml" type="application/mathml+xml">
    <img src="equation18.png" alt="q_w^2 * q_x^2 * q_y^2 * q_z^2 = 1">
</object>

as expected.

<h2 class="no-num" id="acknowledgments">Acknowledgments</h2>

Lars Erik Bolstad, Dean Jackson, Claes Nilsson, George Percivall, Doug Turner, Matt Womer, Chris Dumez

<pre class="anchors">
urlPrefix: https://html.spec.whatwg.org/multipage/
    urlPrefix: webappapis.html; type: dfn
        text: relevant settings object
</pre>

<pre class="biblio">
{
    "WGS84": {
        "authors": [
            "National Imagery and Mapping Agency"
        ],
        "href": "http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf",
        "title": "Department of Defence World Geodetic System 1984",
        "status": "Technical Report 8350.2, Third Edition",
        "publisher": "National Imagery and Mapping Agency",
        "date": "3 January 2000"
    },
    "EULERANGLES": {
        "href": "https://en.wikipedia.org/wiki/Euler_angles",
        "title": "Euler Angles"
    },
    "TOUCH": {
        "href": "https://arxiv.org/abs/1602.04115",
        "title": "TouchSignatures: Identification of User Touch Actions and PINs Based on Mobile Sensor Data via JavaScript",
        "date": "12 Feb 2016"
    },
    "INDOORPOS": {
        "authors": [
            "Shala, Ubejd",
            "Angel Rodriguez"
        ],
        "href": "http://www.diva-portal.org/smash/record.jsf?pid=diva2%3A475619&dswid=9050",
        "title": "Indoor positioning using sensor-fusion in android devices",
        "date": "2011"
    },
    "FINGERPRINT": {
        "href": "https://arxiv.org/abs/1408.1416",
        "title": "Mobile Device Identification via Sensor Fingerprinting",
        "date": "6 Aug 2014"
    },
    "GIMBALLOCK": {
        "href": "https://en.wikipedia.org/wiki/Gimbal_Lock",
        "title": "Gimbal Lock"
    },
    "QUATERNIONS": {
        "href": "https://en.wikipedia.org/wiki/Quaternion",
        "title": " Quaternions"
    },
    "SENSORID": {
        "href": "https://doi.org/10.1109/SP.2019.00072",
        "title": "SensorID: Sensor Calibration Fingerprinting for Smartphones",
        "date": "2019",
        "authors": [
            "Zhang, Jiexin",
            "Beresford, Alastair R.",
            "Sheret, Ian"
        ],
        "publisher": "IEEE Symposium on Security and Privacy"
    },
    "G-FORCE": {
        "href": "https://en.wikipedia.org/wiki/G-force",
        "title": "G-Force"
    }
}
</pre>
